function lineEst = ransacFitModel(line, mode, modeloptions, falsePositions)
% RANSACFITMODEL: Takes a line and fits a model through it by first
% selecting random points on the line (the points marked by falsePositions
% are left out), and then the model is fitted. Finally a new line is
% generated by the model.
%
% LINEEST = ransacFitModel(LINE, MODE, MODELOPTIONS, FALSEPOSITIONS)
% Parameters;
% LINE: A line, where each array entry corresponds to a Z-position in an
%   OCT image (according to OCTSEG standards)
% MODE: Currently, the only supported mode is 'poly', which performs a
% polynom fit
% MODELOPTIONS: Specific parameters for the choosen model.
% In the case of 'poly' this is: 
%       - modeloptions(1): The number of points randomly selected
%       - modeloptions(2): The polynum number
% FALSEPOSITIONS: A vector (same length as line, where a 1 entry markes an
%   invalid position)
% 
% Writen by Markus Mayer, Pattern Recognition Lab, University of
% Erlangen-Nuremberg, markus.mayer@informatik.uni-erlangen.de
%
% First final version: Some time in 2010
% Revised comments: November 2015

validPositions = find(falsePositions == 0);

if strcmp(mode, 'poly')    
    idx = randperm(numel(validPositions));    
    idx = validPositions(idx(1:modeloptions(1)));
    x = 1:size(line,2);
    [p S mu] = polyfit(idx, line(idx), modeloptions(2));
    lineEst = polyval(p, x, S, mu);
% Not completed. This model does not work at the moment.
elseif strcmp(mode, 'ellipse') 
    idx = round(rand(1, 8) * (size(line, 2) - 1) + 1);
    points = line(idx);
    meanIdx = mean(idx);
    stdIdx = std(idx);
    meanPoints = mean(points);
    stdPoints = std(points);
    
    idx = (idx - meanIdx) ./ stdIdx;
    points = (points - meanPoints) ./ stdPoints;
    
    A = zeros(numel(points), 7, 'single');
    
    for k = 1:numel(points)
        A(k,1) = idx(k) * idx(k);
        A(k,2) = - 2 * idx(k);
        A(k,3) = 1;
        A(k,4) = points(k) * points(k);
        A(k,5) = - 2 * points(k);
        A(k,6) = 1;
        A(k,7) = -1;
    end
    
    [U,S,V] = svd(A,0);
end